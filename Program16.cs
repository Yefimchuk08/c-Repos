using System.Text;
using Telegram.Bot;
using Telegram.Bot.Polling;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;


namespace TelegramBotPD422
{
    internal class Program
    {

        private static readonly string BotToken = "8184050550:AAEgzsbJtXvSlEYtcfItW2V23EDFIYcCQew";
        private static TelegramBotClient botClient;
        static void Main(string[] args)
        {
            Console.InputEncoding = Encoding.UTF8;
            Console.OutputEncoding = Encoding.UTF8;


            botClient = new TelegramBotClient(BotToken);
            var me = botClient.GetMeAsync();
            Console.WriteLine($"Bot name : {me.Result.Username} has started work");

            using var cst = new CancellationTokenSource();
            botClient.StartReceiving(HandleUpdateAsync, HandleErrorAsync, cancellationToken: cst.Token);


            Console.WriteLine("Push enter to stop the bot");
            Console.ReadLine();
            cst.Cancel();
        }
        private static async Task HandleTextMessage(ITelegramBotClient botClient, Message message, CancellationToken cancellationToken)
        {
            var text = message.Text;
            var chatId = message.Chat.Id;
            Random random = new Random();
            string[] sticker =
            {
                "üòä",
                "üòÇ",
                "ü§£",
                "‚ù§Ô∏è",
                "üòç",
                "üòí",
                "üëå",
                "üòò",
                "üíï",
                "üòÅ",
                "üëç",
                "üôå",
                "üé∂",
                "üò∂‚Äçüå´Ô∏è",
                "üôÑ",
                "üòè",
                "üò£",
                "üò•"
            };
            int randomsteaker = random.Next(sticker.Length);

            Console.WriteLine($"Get message {text}");
            switch (text.ToLower())
            {
                case "/start":
                    await botClient.SendTextMessageAsync(chatId, "Hello, i`m your chatbot", cancellationToken: cancellationToken);
                    break;
                case "/help":
                    await botClient.SendTextMessageAsync(chatId, "OK, I can halp you: \n[1] - /start if you can`t start bot; \n[2] - /menu show all commands; \n[3] - /about tell about bot; \n[5] - /contact - show infornation about creater; \n[6] - /joke - random joke; \n[6] - /end ended program", cancellationToken: cancellationToken);
                    break;
                case "/menu":
                    await botClient.SendTextMessageAsync(chatId, "All commands: \n[1] - /menu - Menu with all commands; \n[2] - /start - Started program; \n[3] - /help - Can help with your problem; \n[4] - /about - About bot; \n[5] - /contact - show infornation about creater; \n[6] - /joke - random joke; \n[7] - /end - End program;", cancellationToken: cancellationToken);
                    break;
                case "/about":
                    await botClient.SendTextMessageAsync(chatId, "This bot called Panikowskij, it is personal bot by Dima Yefimchuk with PD422 group", cancellationToken:cancellationToken);
                    break;
                case "/end":
                    await botClient.SendTextMessageAsync(chatId, "Thank you for work. Bye", cancellationToken:cancellationToken);
                    break;
                case "/contact":
                    await botClient.SendTextMessageAsync(chatId, "Creater - Dmytro Yefimchuk, student IT Step Academy, phone number: +380*********", cancellationToken: cancellationToken);
                    break;
                case "/joke":
                    RandomeJoke(botClient, message, cancellationToken: cancellationToken);
                    break;
                default:
                    await botClient.SendTextMessageAsync(chatId, $"{sticker[randomsteaker]} {text}", cancellationToken: cancellationToken);
                    break;
            }
        }
        private static async Task HandleUpdateAsync(ITelegramBotClient botClient, Update update, CancellationToken cancellationToken)
        {
            if (update.Type == UpdateType.Message)
            {
                var message = update.Message;
                var chatId = message.Chat.Id;


                switch (message.Type)
                {
                    case MessageType.Text:
                        await HandleTextMessage(botClient, message, cancellationToken);
                        break;
                    case MessageType.Photo:
                        await botClient.SendTextMessageAsync(chatId, "Good photo.", cancellationToken: cancellationToken);
                        break;
                    case MessageType.Sticker:
                        await botClient.SendTextMessageAsync(chatId, "Good sticer", cancellationToken: cancellationToken);
                        break;
                    default:
                        await botClient.SendTextMessageAsync(chatId, "Unkown type", cancellationToken: cancellationToken);
                        break;
                }
            }
        }

        private static async void RandomeJoke(ITelegramBotClient botClient, Message message, CancellationToken cancellationToken)
        {
            var chatId = message.Chat.Id;
            Random rnd = new Random();
            string[] joke =
            {
                "–Ø–∫ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∑–∞–±–æ–±–æ–Ω–Ω–æ–≥–æ –ø—ñ—Ä–∞—Ç–∞? –ü–æ –∑–∞–ø–ª—å–æ–≤–∞–Ω–æ–º—É –ø–∞–ø—É–∑—ñ –Ω–∞ –ª—ñ–≤–æ–º—É –ø–ª–µ—á—ñ.",
                "–î—ñ–≤—á–∏–Ω–∞ –ø—ñ—Å–ª—è –∞–≤–∞—Ä—ñ—ó –¥–∑–≤–æ–Ω–∏—Ç—å –¥–æ –ø–æ–ª—ñ—Ü—ñ—ó —ñ –∫–∞–∂–µ: –ê–ª–ª–æ 102, –≤—ñ—Ç–∞—é —Ç–µ–ø–µ—Ä –≤–∞—Å 101",
                "–í —Ç–∞–∫—Å—ñ —Å—ñ–¥–∞—î –±–∞–±—Ü—è –∑ –∞–≤—Ç–æ–º–∞—Ç–æ–º, —ñ —Ç–∞–∫—Å–∏—Å—Ç –ø–∏—Ç–∞—î:\n –©–æ –∂ –≤–∏ –±–∞–±—Ü—é –∑ –∞–≤—Ç–æ–º–∞—Ç–æ–º —Ö–æ–¥–∏—Ç–µ? \n–¢–∞ –æ—Ç —á–∞—Å–∏ —Ç–∞–∫—ñ –≥–≤–∞–ª—Ç—É—é—Ç—å - –∫–∞–∂–µ –±–∞–±—Ü—è \n–¢–∞ —Ö—Ç–æ –∂ –≤–∞—Å —Ç–∞–∫—É —Å—Ç–∞—Ä—É –≥–≤–∞–ª—Ç—É–≤–∞—Ç–∏ –±—É–¥–µ?\n *–ë–∞–±—Ü—è –Ω–∞–≤–æ–¥–∏—Ç—å —Å—Ç–≤–æ–ª –Ω–∞ —Ç–∞–∫—Å–∏—Å—Ç–∞ —ñ –∫–∞–∂–µ* \n –ê –æ—Ç —Ç–∏ —ñ –±—É–¥–µ—à.",
                "–á–¥—É –≤ –∞–≤—Ç–æ–±—É—Å—ñ. –°—Ç–∞–ª–æ —Å–∫—É—á–Ω–æ —ñ –∑–≥–∞–¥–∞–≤ —Å—Ç–∞—Ä–∏–π –ø—Ä–∏–∫–æ–ª. –ü–æ—á–∞–≤ –¥–∏–≤–∏—Ç–∏—Å—å –Ω–∞ –¥—ñ–≤—á–∏–Ω—É, –¥–æ–≤–≥–æ —Ä–æ–∑–¥–∏–≤–ª—è—é—Å—å —ó—ó. –î–∞–ª—ñ, –±–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω —ñ –≥–æ–≤–æ—Ä—é: '–®–µ—Ñ, —è –∑–Ω–∞–π—à–æ–≤ —ó—ó'. –ê —Ç–∞ –æ—Å–æ–±–∞ –Ω–µ —Ä–æ–∑–≥—É–±–∏–≤—à–∏—Å—å —Ö–≤–∞—Ç–∞—î —Å–≤—ñ–π —Ç–µ–ª–µ—Ñ–æ–Ω —ñ –≥–æ–≤–æ—Ä–∏—Ç—å: '–Ø —Å–ø–∞–ª–∏–ª–∞—Å—å, –ø–æ—Ç—Ä–µ–±—É—é –µ–≤–∞–∫—É–∞—Ü—ñ—Ö'. –Ø –≤ —à–æ—Ü—ñ. –í–µ—Å—å –∞–≤—Ç–æ–±—É–≤ —Å–º—ñ—î—Ç—å—Å—è",
                "–ß–æ–º—É —Ç–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—à –Ω–∞ –ª–µ–∫—Ü—ñ—è—Ö? \n–Ø—Å–ª—É—Ö–∞—é –∞–ª–µ –Ω–µ –∑–∞—Å—É–¥–∂—É—é.",
                "–ö—Ä–∞—â–∏–π –∑–∞—Ö–∏—Å—Ç —Ü–µ –Ω–∞–ø–∞–¥. –ö—É–ø–∏–ª–∏ –±–æ—Å —Ç–∞ –ø–∞–∫—É—î–º –¢–¶–ö",
                "–ñ–∏—Ç—Ç—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–∂–∏—Ç–∏ —Ç–∞–∫ —â–æ–± –≤ —á–µ—Å—Ç—å —Ç–µ–±–µ –Ω–∞–∑–≤–∞–ª–∏ –¥–ª—è –ª—é–¥–µ–π –∑ –î–¶–ü. –õ–µ–æ–Ω–∞—Ä–¥–æ –î–∞ –í—ñ–Ω—á—ñ",
                "–ß–æ–º—É –¥—É–Ω—É–≤ –≤–æ–≤–∫, –∞ –¥–∞—Ö –ø–æ–Ω–µ—Å–ª–æ —É –ø–æ—Ä–æ—Å—è—Ç?",
                "–°–∞–ª–∞—Ç '–ú–µ—Ç–∞–ª—É—Ä–≥': –¢—Ä–∏ —á–∞–π–Ω—ñ –ª–æ–∂–∫–∏ —Ç–∞ –¥–≤—ñ —Å—Ç–æ–ª–æ–≤—ñ",
                "–¢—Ä–µ–Ω–µ—Ä –≤—Ç—ñ—à—É—î –ø—Ä–æ–≥—Ä–∞–≤—à–æ–≥–æ –±–æ–∫—Å–µ—Ä–∞:\n –ù—É –≤ —Ç—Ä–µ—Ç—å–æ–º—É —Ä–∞—É–Ω–¥—ñ —Ç–∏ –π–æ–≥–æ –∫–∞–Ω–µ—à–Ω–æ –Ω–∞–ª—è–∫–∞–≤. \n–ß–∏–º? \n–í—ñ–Ω –¥—É–º–∞–≤ —â–æ –≤–±–∏–≤ —Ç–µ–±–µ.",
                "–¢–∞ –Ω–µ –±—É–≤ —è –≤—á–æ—Ä–∞ –ø'—è–Ω–∏–π!!! \n–ù—É –¥–∞, –∞ —Ö—Ç–æ –∫—Ä–∏—á–∞–≤: –û—Ñ—ñ—Ü—ñ–∞–Ω—Ç, –ø—Ä–∏–Ω–µ—Å–∏ –º–µ–Ω—ñ –¥–≤–µ—Ä—ñ, —è —Ö–æ—á—É –≤–∏–π—Ç–∏!",
                "- –î—ñ–≤—á–∏–Ω–æ, –∞ —è–∫ —Ç–∏ —Å—å–∏ –Ω–∞–∑–∏–≤–∞—à? \n-–°–≤—î—Ç–∞. \n-–¢–æ —è–∫—ñ? –†—ñ–∑–¥–≤—î–Ω—ñ —á–∏ –í–µ–ª–∏–∫–æ–¥–Ω—ñ?",
                "–ó–∞–∫–æ–¥–æ–≤–∞–Ω–∏–π —á–æ–ª–æ–≤—ñ–∫ –ø—Ä–∏–±—ñ–≥–∞—î –¥–æ–¥–æ–º—É —ñ –∫—Ä–∏—á–∏—Ç—å –¥–æ –∂—ñ–Ω–∫–∏. \n-–ñ—ñ–Ω–∫–æ –¥–∑–≤–æ–Ω–∏ –≤ –ø–æ–ª—ñ—Ü—ñ—é –º–µ–Ω–µ –≤–∑–ª–∞–º–∞–ª–∏!!!",
                "-–í–∏–±–∞—á—Ç–µ, –∞ —É –≤–∞—Å –≤–æ–≥–Ω–∏–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ—Ç—å—Å—è? \n-–¢–∞ –ø—ñ—à–æ–≤ —Ç–∏ - –≤—ñ–¥–∫–∞–∑–∞–≤ –ü—Ä–æ–º–µ—Ç–µ–π –æ—Ä–ª—É",
                "–ü–æ–ª—ñ—Ü–µ–π—Å—å–∫–∏ –∑—É–ø–∏–Ω—è—î –Ω–∞—Ä–∫–æ–º–∞–Ω–∞ –≤ –∑–æ–æ–ø–∞—Ä–∫—É. \n-–ö–æ–ª–æ–≤—Å—è? \n-–ù—ñ \n-–ó–∞—Ä–∞–∑ —Ü–µ –º–∏ —ñ –ø–µ—Ä–µ–≤—ñ—Ä–µ–º–æ! \n-–©–æ —Ü–µ –∑–∞ –∑–≤—ñ—Ä?(–ø–æ–∫–∞–∑—É—î –Ω–∞ –∫–ª—ñ—Ç–∫—É –∑ –∫–µ–Ω–≥—É—Ä—É)\n-–ó–∞—î—Ü—å —Ä–æ–∫—ñ–≤ —Ç–∞–∫ 40-45",
                "–î–≤–∞ –≥—Ä—É–∑–∏–Ω–∞ —Å—ñ–ª–∏ –≥—Ä–∞—Ç–∏ –≤ —à–∞—Ö–º–∞—Ç–∏. –û–±–æ—î –≥—Ä–∞—Ç–∏ –Ω–µ –≤—Å—ñ—é—Ç—å. –û–¥–∏–Ω –ø–æ—Å—Ç–∞–≤–∏–≤ –Ω–∞ —Ü–µ–Ω—Ç—Ä –¥–æ—à–∫–∏ –∫–æ—Ä–æ–ª–µ–≤—É —ñ –∫–∞–∂–µ: \n-–ú–∞—Ç!! \n –ê —ñ–Ω—à–∏–π –ø–æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—é –ø–æ—Ä—è–¥ —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î: \n-–û—Ç–µ—Ü—å",
                "–¢—Ä–µ–Ω–µ—Ä –∫–∞–º—ñ–∫–∞–¥–∑–µ –≥–æ–≤–æ—Ä–∏—Ç—å: \n-–î–∏–≤–∏—Å—å –ø–æ–∫–∞–∑—É—é –æ–¥–∏–Ω —Ä–∞–∑",
                "–ó–∞–±—É—Ö–∞–ª–∏ —è–∫–æ—Å—å –•–æ–ª–º—Å —ñ –í–∞—Ç—Å–æ–Ω. –í–∞—Ç—Å–æ–Ω –ø—ñ—à–æ–≤ –≤ —Ç—É–∞–ª–µ—Ç. –ü–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —ñ –≥–æ–≤–æ—Ä–∏—Ç—å: \n-–î–∏–≤–Ω–∏–π —É –≤–∞—Å —Ç—É–∞–ª–µ—Ç –•–æ–ª–º—Å. –í—ñ–¥–∫—Ä–∏–≤–∞—é –¥–≤–µ—Ä—ñ —Å–≤—ñ—Ç–ª–æ –≤–º–∏–∫–∞—î—Ç—å—Å—è, –∑–∞–∫—Ä–∏–≤–∞—é —Å–≤—ñ—Ç–ª–æ –≥–∞—Å–Ω–µ. \n-–©–æ—Å—å –º–æ—è –¥–µ–¥—É–∫—Ü—ñ—è –ø–æ–¥–∫–∞–∑—É—î –í–∞—Ç—Å–æ–Ω —â–æ –≤–∏ –Ω–∞–≥–∞–¥–∏–ª–∏ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫",
                "–©–æ –±—É–¥–µ —è–∫—â–æ –≤ —Ä–∏—Å –¥–æ–¥–∞—Ç–∏ –¥–≤–∞ –≥—Ä–∏–±–∞? \n–•—ñ—Ä–æ—Å—ñ–º–∞ —ñ –ù–∞–≥–∞—Å–∞–∫—ñ",
                "–ö–æ–ª–∏ —Ç–∞—Ç–æ —Å–∫–∞–∑–∞–≤ '–ö—Ä–∞—â–µ –≤–¥–æ–º–∞ —á–∏–º –¥–µ—Å—å –≤ –ø–µ—Ä–µ—É–ª–∫–∞—Ö' –∞ –¥–≤–∞ 3 –Ω–æ–∂–æ–≤–∏—Ö",
                "–í—ñ–Ω –±—ñ–≥–∞–≤ –∑–∞ –∫–æ–∂–Ω–æ—é —é–±–∫–æ—é. –Ü –≤—Å–µ –± –Ω—ñ—á–æ–≥–æ —è–∫–±–∏ —Ü–µ –Ω–µ –±—É–ª–æ –≤ –®–æ—Ç–ª–∞–Ω–¥—ñ—ó",
            };
            int randomnumb = rnd.Next(joke.Length);
            await botClient.SendTextMessageAsync(chatId, joke[randomnumb], cancellationToken: cancellationToken);
        }

        private static Task HandleErrorAsync(ITelegramBotClient botClient, Exception exception, CancellationToken cancellationToken)
        {
            Console.WriteLine($"Error : {exception.Message}");
            return Task.CompletedTask;
        }
    }
}
